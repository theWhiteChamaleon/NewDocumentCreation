{"version":3,"file":"static/js/903.c4ed9deb.chunk.js","mappings":"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","sources":["components/Popup/Popup.jsx","pages/DocumentCreation/WidgetLifecycle.jsx","hooks/useDocumentCreationWidget.js","hooks/useDocumentCreationDropableArea.js","pages/DocumentCreation/DragAndDrop.jsx","pages/DocumentCreation/DocumentCreationHelpers.js","pages/DocumentCreation/MassUpdateDropdown.jsx","pages/DocumentCreation/DocumentCreationWidgetToolbarCta.jsx","pages/DocumentCreation/DocumentCreationWidget.jsx","pages/DocumentCreation/documentCreationIndex.js","services/api/PlantAssignment/saveTableDataService.js"],"sourcesContent":["import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport \"./Popup.css\";\r\nimport {\r\n  MSG_ADDPRODUCT_NOT_ALLOWED_ERROR,\r\n  MSG_ADDPRODUCT_RELEASED_ERROR,\r\n  MSG_EMPTYADD_ERROR,\r\n} from \"../../utils/toastMessages\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst AvailablePlant = forwardRef(\r\n  ({ data, columns, addedItem, CAName, state }, ref) => {\r\n    const { showWarningToast } = useToast();\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    useEffect(() => {\r\n      setRowSelection({}); // Reset selection when data changes\r\n    }, [data]);\r\n\r\n    const addPlant = () => {\r\n      const selectedRows = table.getSelectedRowModel().rows;\r\n      const selectedItems = selectedRows.map(\r\n        (item) => item.original[\"Available Plant\"]\r\n      );\r\n\r\n      if (selectedItems.length === 0) {\r\n        showWarningToast(MSG_EMPTYADD_ERROR);\r\n        return;\r\n      }\r\n\r\n      addedItem(selectedItems); // Send selected items to parent\r\n      setRowSelection({}); // Reset selection\r\n    };\r\n\r\n    // Expose the addPlant function to parent\r\n    useImperativeHandle(ref, () => ({\r\n      addPlant,\r\n    }));\r\n\r\n    const enhancedColumns = useMemo(() => {\r\n      const selectionColumn = {\r\n        id: \"select\",\r\n        cell: ({ row }) => (\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={row.getIsSelected()}\r\n            onChange={row.getToggleSelectedHandler()}\r\n          />\r\n        ),\r\n      };\r\n      return [selectionColumn, ...columns];\r\n    }, [columns]);\r\n\r\n    const table = useReactTable({\r\n      data,\r\n      columns: enhancedColumns,\r\n      state: { rowSelection },\r\n      enableRowSelection: true,\r\n      onRowSelectionChange: setRowSelection,\r\n      getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary me-3\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(true));\r\n            }}\r\n          >\r\n            Select All\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(false));\r\n            }}\r\n          >\r\n            Deselect All\r\n          </button>\r\n        </div>\r\n\r\n        {table.getRowModel().rows.length > 0 ? (\r\n          <div className=\"overflow-auto\" style={{ maxHeight: \"60vh\" }}>\r\n            {table.getRowModel().rows.map((row) => (\r\n              <div\r\n                key={row.id}\r\n                className=\"p-3 border-bottom d-flex align-items-center\"\r\n                style={{\r\n                  backgroundColor: row.getIsSelected() ? \"#d5e8f2\" : \"inherit\",\r\n                }}\r\n              >\r\n                <div className=\"me-3\">\r\n                  {flexRender(\r\n                    row.getVisibleCells()[0].column.columnDef.cell,\r\n                    row.getVisibleCells()[0].getContext()\r\n                  )}\r\n                </div>\r\n                <div>{row.original[columns[0].accessorKey]}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-muted p-3\">No data available</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AvailablePlant;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"../../services/api/refreshService\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport {\r\n  MSG_REFRESH_ERROR,\r\n  MSG_REFRESH_SUCCESS,\r\n} from \"../../utils/toastMessages\";\r\nimport store from \"../../store\"; // ✅ Import Redux store directly\r\nimport Loader from \"../../components/Loader/Loader\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useBOSDropableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader /> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setParentDetailsLoading,\r\n  setSpecDocument,\r\n  setDocumentCreationData\r\n} from \"../store/droppedObjectSlice\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService, loadWAFData, fetchData } from \"../utils/helpers\";\r\n\r\nconst useDocumentCreationWidget = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  let email = window.widget.getValue(\"email\");\r\n\r\n  console.log(\"Email in usedocumentCreationWidget:\", email);\r\n  // console.log(\"Security context using preferences are\", securitycontext);\r\n\r\n  const handleDocumentCreationWidget = async (\r\n    collabSpace,\r\n    state,\r\n    objectId,\r\n    type,\r\n    parentName,\r\n    parentRevision\r\n  ) => {\r\n    try {\r\n      console.log(\"Object id is:\", objectId);\r\n      console.log(\"Object type is:\", type);\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      console.log(\"[useBOSWidget] CSRF Headers:\", headers);\r\n\r\n      // Step 1: Call Enovia Web Service\r\n      let baseURL = `${ENOVIA_BASE_URL}/resources/v1/modeler/documents/parentId/${objectId}?parentRelName=SpecificationDocument`;\r\n\r\n      let parentDirection = type === \"Document\" ? \"to\" : \"from\";\r\n\r\n      let urlObjWAF = `${baseURL}&parentDirection=${parentDirection}`;\r\n      let ChildObject = await callEnoviaWebService(\r\n        \"GET\",\r\n        urlObjWAF,\r\n        \"\",\r\n        headers\r\n      );\r\n      console.log(\"SpecDetails Response: document creation\", ChildObject);\r\n\r\n      if (\r\n        ChildObject &&\r\n        ChildObject.status &&\r\n        ChildObject.output.data.length > 0\r\n      ) {\r\n        let ChildObjectDocument = ChildObject.output.data.map((sSpec) => ({\r\n          id: sSpec.id,\r\n          title:\r\n            sSpec.dataelements.title && sSpec.dataelements.title.trim() !== \"\"\r\n              ? sSpec.dataelements.title\r\n              : sSpec.dataelements.secondaryTitle,\r\n          revision: sSpec.dataelements.revision,\r\n          state: sSpec.dataelements.stateNLS,\r\n          name: sSpec.dataelements.name,\r\n        }));\r\n\r\n        console.log(\r\n          \"[useBOSWidget] Extracted Spec Documents:\",\r\n          ChildObjectDocument\r\n        );\r\n        // if type is Document and then iterate ovet the\r\n        if (type === \"Document\") {\r\n          const revisionBody = {\r\n            data: [],\r\n          };\r\n          ChildObjectDocument.forEach((child) => {\r\n            const body = {\r\n              id: child.id,\r\n              identifier: child.id,\r\n              type: \"VPMReference\",\r\n              source: `${ENOVIA_BASE_URL}`,\r\n              relativePath: `/resources/v1/modeler/dseng/dseng:EngItem/${child.id}`,\r\n            };\r\n            revisionBody.data.push(body);\r\n          });\r\n          const RevisionUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/version/getGraph`;\r\n          const response = await callEnoviaWebService(\r\n            \"POST\",\r\n            RevisionUrl,\r\n            revisionBody,\r\n            headers\r\n          );\r\n          console.log(\"response is:\", response);\r\n          response.output.results.forEach((item) => {\r\n            // Find the latest version based on the 'revision' key\r\n            const latestVersion = item.versions.reduce((latest, current) => {\r\n              return convertRevisionToNumber(current.revision) >\r\n                convertRevisionToNumber(latest.revision)\r\n                ? current\r\n                : latest;\r\n            });\r\n\r\n            // Update 'isLatestRevision' for only the matching document\r\n            ChildObjectDocument = ChildObjectDocument.map((doc) => {\r\n              if (item.versions.some((version) => version.id === doc.id)) {\r\n                return {\r\n                  ...doc,\r\n                  isLatestRevision:\r\n                    doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n                };\r\n              }\r\n              return doc;\r\n            });\r\n          });\r\n\r\n          // Function to convert revision to a comparable numeric value\r\n          function convertRevisionToNumber(rev) {\r\n            if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n            let number = 0;\r\n            for (let i = 0; i < rev.length; i++) {\r\n              number =\r\n                number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n            }\r\n            return number; // Handles A-Z, AA-ZZ revisions\r\n          }\r\n\r\n          console.log(\"ChildObjectDocument is:\", ChildObjectDocument);\r\n        }\r\n        let requestBody;\r\n        let getUrl;\r\n        if (type === \"Document\") {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestSpecItemDetails\";\r\n          requestBody = {\r\n            SpecName: parentName, // Replace with actual SpecName if dynamic\r\n            SpecRevision: parentRevision, // Replace with actual SpecRevision if dynamic\r\n            Items: ChildObjectDocument.map((obj) => ({\r\n              ItemName: obj.name, // Replace dynamically if needed\r\n              ItemRevision: obj.revision,\r\n            })),\r\n          };\r\n        } else {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestItemSpecDetails\";\r\n          requestBody = {\r\n            ItemName: parentName, // Replace with actual ItemName if dynamic\r\n            ItemRevision: parentRevision, // Replace with actual revision if dynamic\r\n            Specifications: ChildObjectDocument.map((obj) => ({\r\n              SpecName: obj.name,\r\n              SpecRevision: obj.revision,\r\n            })),\r\n          };\r\n        }\r\n\r\n        console.log(\"Requested Body is:\", requestBody);\r\n\r\n        const response = await fetchData(\"POST\", getUrl, requestBody);\r\n\r\n        console.log(\"the response from node API is:\", response);\r\n\r\n        let mergedData = [];\r\n        if (response?.data?.data?.Specifications) {\r\n          // **Case 1: API Response Contains \"Specifications\"**\r\n          response.data.data.Specifications.forEach((spec) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (obj) =>\r\n                obj.name === spec.SpecName && obj.revision === spec.SpecRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              childName: spec.SpecName,\r\n              childRevision: spec.SpecRevision,\r\n              PrintOnPurchaseOrderRequired: spec.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: spec.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: spec.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: spec.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": spec[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else if (response?.data?.data?.Items) {\r\n          // get all the id's\r\n\r\n          // **Case 2: API Response Contains \"Items\"**\r\n          response.data.data.Items.forEach((item) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (doc) =>\r\n                doc.name === item.ItemName && doc.revision === item.ItemRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childName: item.ItemName,\r\n              childRevision: item.ItemRevision,\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              PrintOnPurchaseOrderRequired: item.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: item.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: item.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: item.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": item[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else {\r\n          console.warn(\"[useBOSWidget] Unexpected API response format.\");\r\n        }\r\n        console.log(\r\n          \"[useBOSWidget] Final Merged Data for Dispatch:\",\r\n          mergedData\r\n        );\r\n        dispatch(setDocumentCreationData(ChildObject.output.data));\r\n        dispatch(setSpecDocument(mergedData));\r\n        // You can now dispatch or return this data as needed\r\n      } else {\r\n        console.warn(\"[useDocumentCreationWidget] No connected childs.\");\r\n        dispatch(setSpecDocument([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[useDocumentCreationWidget] Error:\", error);\r\n      throw error; // Let the caller handle the error\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading state is reset\r\n    }\r\n  };\r\n\r\n  return { handleDocumentCreationWidget };\r\n};\r\n\r\nexport default useDocumentCreationWidget;\r\n\r\n// response.output.results.forEach((item) => {\r\n//   // Find the latest version based on the 'revision' key\r\n//   const latestVersion = item.versions.reduce((latest, current) => {\r\n//     return convertRevisionToNumber(current.revision) > convertRevisionToNumber(latest.revision)\r\n//       ? current\r\n//       : latest;\r\n//   });\r\n\r\n//   // Update 'isLatestRevision' for each document\r\n//   ChildObjectDocument = ChildObjectDocument.map((doc) => ({\r\n//     ...doc,\r\n//     isLatestRevision: doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n//   }));\r\n// });\r\n\r\n// // Function to convert revision to a comparable numeric value\r\n// function convertRevisionToNumber(rev) {\r\n//   if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n//   let number = 0;\r\n//   for (let i = 0; i < rev.length; i++) {\r\n//     number = number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n//   }\r\n//   return number; // Handles A-Z, AA-ZZ revisions\r\n// }\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDragObjectDetailsDocumentCreation,setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  getDroppedObjectDetails,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport useDocumentCreationWidget from \"./useDocumentCreationWidget\";\r\n\r\nconst useDocumentCreationDropableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { handleDocumentCreationWidget } = useDocumentCreationWidget();\r\n\r\n  // const [csrfHeaders, setCsrfHeaders] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n          dispatch(setDragObjectDetailsDocumentCreation(draggedObjectData));\r\n\r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handleDocumentCreationWidget(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              draggedObjectData.Name,\r\n              draggedObjectData[\"Dropped Revision\"]\r\n            );\r\n          }\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, handleDocumentCreationWidget]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDocumentCreationDropableArea;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../components/DragAndDrop/DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const { handleDrop } = useDocumentCreationDropableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n\r\n  let cardData = {\r\n    title: item.Title || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nfunction formatDateToCustom(input) {\r\n  const date = new Date(input);\r\n  const options = { timeZone: 'Asia/Kolkata' };\r\n  const localDate = new Date(date.toLocaleString('en-US', options));\r\n  const pad =(n) => n.toString().padStart(2, '0');\r\n  const month = pad(localDate.getMonth() + 1);\r\n  const day = pad(localDate.getDate());\r\n  const year = localDate.getFullYear();\r\n  let hours = localDate.getHours();\r\n  const minutes = pad(localDate.getMinutes());\r\n  const seconds = pad(localDate.getSeconds());\r\n  const ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12 || 12;\r\n  return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\r\n}\r\nexport const getTableData = (tableData, type) => {\r\n  console.log(\"tableData from function gettableData\", tableData);\r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    let rowData = {\r\n      Title: data?.dataelements?.title || \"N/A\",\r\n      Name : data?.dataelements?.name || \"N/A\",\r\n      Revision: data?.dataelements?.revision || \"1\",\r\n      IsLatestRevision: data?.dataelements?.isLatestRevision || \"N/A\",\r\n      Modified: data?.dataelements?.modified && formatDateToCustom(data?.dataelements?.modified) || \"N/A\",\r\n      State: data?.dataelements?.state || \"N/A\",\r\n      TypeNLS: data?.dataelements?.typeNLS || \"N/A\",\r\n      // CollabSpaceTitle: data?.dataelements?.collabSpaceTitle || \"N/A\",\r\n      Originated: data?.dataelements?.originated && formatDateToCustom(data?.dataelements?.originated) || \"N/A\",   \r\n    };\r\n\r\n    // Add \"IsLatest\" key only if type === \"Document\"\r\n    // if (type === \"Document\") {\r\n    //   rowData.IsLatest = data?.childLatest || \"FALSE\";\r\n    // }\r\n\r\n    return rowData;\r\n  });\r\n};\r\n\r\nexport const tableColumns = (type, latestRevision, droppedRevision) => {\r\n  const baseColumns = [\r\n    { accessorKey: \"Title\", header: \"Title\" },\r\n    { accessorKey: \"Name\", header: \"Name\" },\r\n    { accessorKey: \"Revision\", header: \"Revision\" },\r\n    { accessorKey: \"IsLatestRevision\", header: \"IsLatestRevision\" },\r\n    { accessorKey: \"Modified\", header: \"Modified\" },\r\n    { accessorKey: \"State\", header: \"State\" },\r\n    { accessorKey: \"TypeNLS\", header: \"Type\" },\r\n    // { accessorKey: \"CollabSpaceTitle\", header: \"collabspacetitle\" },\r\n    { accessorKey: \"Originated\", header: \"Originated\" },\r\n\r\n\r\n  ];\r\n\r\n  // if (type === \"Document\") {\r\n  //   baseColumns.push({ accessorKey: \"IsLatest\", header: \"Is Latest\" });\r\n  // }\r\n\r\n  // const editableColumns = [\r\n  //   \"Print On Purchase Order Required\",\r\n  //   \"Print On Work Order Required\",\r\n  //   \"Work Order Document Required\",\r\n  //   \"Print On report Order Required\",\r\n  //   \"SAP/JDE\",\r\n  // ].map((columnKey) => ({\r\n  //   accessorKey: columnKey,\r\n  //   header: columnKey,\r\n  //   cell: ({ row, getValue, table }) => {\r\n  //     // Determine if the cell should be editable\r\n  //     const isEditable =\r\n  //       type === \"Document\"\r\n  //         ? row.original.IsLatest !== \"FALSE\" // Editable only if IsLatest is NOT \"FALSE\"\r\n  //         : !latestRevision || latestRevision === droppedRevision;\r\n\r\n  //     const handleDropdownChange = (e) => {\r\n  //       const updatedValue = e.target.value;\r\n  //       const updatedData = table\r\n  //         .getRowModel()\r\n  //         .rows.map((r) =>\r\n  //           r.id === row.id\r\n  //             ? { ...r.original, [columnKey]: updatedValue }\r\n  //             : r.original\r\n  //         );\r\n\r\n  //       table.options.meta?.updateTableData(updatedData);\r\n  //     };\r\n\r\n  //     return isEditable ? (\r\n  //       <select\r\n  //         value={getValue()}\r\n  //         onChange={handleDropdownChange}\r\n  //         className=\"appearance-none bg-transparent border-none cursor-pointer focus:outline-none\"\r\n  //         style={{\r\n  //           width: \"70%\",\r\n  //           padding: \"5px 0\",\r\n  //           fontSize: \"14px\",\r\n  //           background: \"none\",\r\n  //           border: \"none\",\r\n  //           textAlign: \"left\",\r\n  //         }}\r\n  //         onMouseOver={(e) => (e.target.style.border = \"1px solid #ccc\")}\r\n  //         onMouseOut={(e) => (e.target.style.border = \"none\")}\r\n  //       >\r\n  //         <option value=\"Yes\">Yes</option>\r\n  //         <option value=\"No\">No</option>\r\n  //       </select>\r\n  //     ) : (\r\n  //       <span>{getValue()}</span> // Show non-editable text if conditions fail\r\n  //     );\r\n  //   },\r\n  // }));\r\n\r\n  return [...baseColumns];\r\n};\r\n\r\n// export const tableColumns = (type, latestRevision, droppedRevision) => [\r\n//   { accessorKey: \"Title\", header: \"Title\" },\r\n//   { accessorKey: \"Revision\", header: \"Revision\" },\r\n//   { accessorKey: \"State\", header: \"State\" },\r\n//   ...[\r\n//     \"Print On Purchase Order Required\",\r\n//     \"Print On Work Order Required\",\r\n//     \"Work Order Document Required\",\r\n//     \"Print On report Order Required\",\r\n//     \"SAP/JDE\",\r\n//   ].map((columnKey) => ({\r\n//     accessorKey: columnKey,\r\n//     header: columnKey,\r\n//     cell: ({ row, getValue, table }) => {\r\n//       const handleDropdownChange = (e) => {\r\n//         const updatedValue = e.target.value;\r\n//         const updatedData = table\r\n//           .getRowModel()\r\n//           .rows.map((r) =>\r\n//             r.id === row.id\r\n//               ? { ...r.original, [columnKey]: updatedValue }\r\n//               : r.original\r\n//           );\r\n\r\n//         table.options.meta?.updateTableData(updatedData);\r\n//       };\r\n\r\n//       return (\r\n//         <select\r\n//           value={getValue()}\r\n//           onChange={handleDropdownChange}\r\n//           className=\"appearance-none bg-transparent border-none cursor-pointer focus:outline-none\"\r\n//           style={{\r\n//             width: \"70%\",\r\n//             padding: \"5px\",\r\n//             fontSize: \"14px\",\r\n//             color: \"#333\",\r\n//             background: \"none\",\r\n//             border: \"none\",\r\n//             textAlign: \"left\",\r\n//           }}\r\n//           onMouseOver={(e) => (e.target.style.border = \"1px solid #ccc\")}\r\n//           onMouseOut={(e) => (e.target.style.border = \"none\")}\r\n//         >\r\n//           <option value=\"Yes\">Yes</option>\r\n//           <option value=\"No\">No</option>\r\n//         </select>\r\n//       );\r\n//     },\r\n//   })),\r\n// ];\r\n\r\n// {\r\n//   accessorKey: \"MBom\",\r\n//   header: \"MBom\",\r\n//   cell: ({ row, getValue, table }) => {\r\n//     const handleDropdownChange = (e) => {\r\n//       if (!CAName) return; // Prevent changes when disabled\r\n//       const updatedValue = e.target.value;\r\n\r\n//       // Update the table data state here\r\n//       const updatedData = table\r\n//         .getRowModel()\r\n//         .rows.map((r) =>\r\n//           r.id === row.id ? { ...r.original, MBom: updatedValue } : r.original\r\n//         );\r\n\r\n//       table.options.meta?.updateTableData(updatedData); // Call custom table update function\r\n//     };\r\n\r\n//     return (\r\n//       <select\r\n//         value={getValue()}\r\n//         onChange={handleDropdownChange}\r\n//         disabled={!CAName} // Disable dropdown if CAName is false\r\n//         className={`appearance-none bg-transparent border-none cursor-pointer focus:outline-none`}\r\n//         style={{\r\n//           ...(CAName === false && { appearance: \"none\" }), // Apply appearance: none only if CAName is false\r\n//           width: \"70%\",\r\n//           padding: \"5px\",\r\n//           fontSize: \"14px\",\r\n//           color: \"#333\",\r\n//           background: \"none\",\r\n//           border: \"none\",\r\n//           textAlign: \"left\",\r\n//         }}\r\n//         onMouseOver={(e) => {\r\n//           if (CAName) e.target.style.border = \"1px solid #ccc\";\r\n//         }}\r\n//         onMouseOut={(e) => {\r\n//           if (CAName) e.target.style.border = \"none\";\r\n//         }}\r\n//       >\r\n//         <option value=\"Make\">Make</option>\r\n//         <option value=\"Buy\">Buy</option>\r\n//       </select>\r\n//     );\r\n//   },\r\n// },\r\n","import React, { useState } from \"react\";\r\n\r\nconst MassUpdateDropdown = ({\r\n  editableColumns,\r\n  selectedRows,\r\n  onApplyUpdate,\r\n  valueOptions,\r\n  onClose, // New prop to close dropdown\r\n}) => {\r\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const handleApplyUpdate = (applyToAll) => {\r\n    if (!selectedColumn || !selectedValue) {\r\n      alert(\"Please select a column and a value.\");\r\n      return;\r\n    }\r\n\r\n    onApplyUpdate(\r\n      selectedColumn,\r\n      selectedValue,\r\n      applyToAll ? \"all\" : \"selected\"\r\n    );\r\n    onClose(); // Close after applying update\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown-menu p-3 \"\r\n      style={{ width: \"300px\", display: \"block\" }}\r\n    >\r\n      <label>Select Column:</label>\r\n      <select\r\n        className=\"form-select mb-2\"\r\n        onChange={(e) => setSelectedColumn(e.target.value)}\r\n        value={selectedColumn}\r\n      >\r\n        <option value=\"\">-- Select Column --</option>\r\n        {editableColumns.map((col) => (\r\n          <option key={col} value={col}>\r\n            {col}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <label>Select Value:</label>\r\n      <select\r\n        className=\"form-select mb-2\"\r\n        value={selectedValue}\r\n        onChange={(e) => setSelectedValue(e.target.value)}\r\n        disabled={!selectedColumn}\r\n      >\r\n        <option value=\"\">-- Select Value --</option>\r\n        {valueOptions.map((val) => (\r\n          <option key={val} value={val}>\r\n            {val}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button\r\n        className=\"btn btn-outline-success me-2 mb-2\"\r\n        onClick={() => handleApplyUpdate(false)}\r\n        disabled={!selectedRows.length}\r\n        style={{ cursor: !selectedRows.length ? \"not-allowed\" : \"pointer\" }}\r\n      >\r\n        Apply to Selected\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-primary me-2 mb-2\"\r\n        onClick={() => handleApplyUpdate(true)}\r\n      >\r\n        Apply to All\r\n      </button>\r\n\r\n      {/* Close Button */}\r\n      <button className=\"btn btn-outline-danger me-2 mb-2\" onClick={onClose}>\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MassUpdateDropdown;\r\n","import { useState } from \"react\";\r\nimport Popup from \"../../components/Popup/Popup\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_BOS_SAVE } from \"../../utils/toastMessages\";\r\nimport MassUpdateDropdown from \"./MassUpdateDropdown\";\r\n\r\nconst DocumentCreationToolbarCta = ({\r\n  onSave,\r\n  state,\r\n  selectedRows,\r\n  tableData,\r\n  // onMassUpdate,\r\n  type,\r\n  latestRevision,\r\n  droppedRevision,\r\n  documentCreationData,\r\n}) => {\r\n  const { showWarningToast } = useToast();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  // const handleSaveClick = () => {\r\n  //   if (type !== \"Document\" && latestRevision !== droppedRevision) {\r\n  //     showWarningToast(MSG_BOS_SAVE);\r\n  //   } else {\r\n  //     onSave();\r\n  //   }\r\n  //   // When save button is clicked, call onSave passed as prop\r\n  //   // onSave is passed with tableData from parent\r\n  // };\r\n  // const handleMassUpdate = (column, value, scope) => {\r\n  //   if (scope === \"selected\") {\r\n  //     onMassUpdate(selectedRows, column, value);\r\n  //   } else {\r\n  //     onMassUpdate(tableData, column, value);\r\n  //   }\r\n  // };\r\n  // const editableColumns = [\r\n  //   \"Print On Purchase Order Required\",\r\n  //   \"Print On Work Order Required\",\r\n  //   \"Work Order Document Required\",\r\n  //   \"Print On report Order Required\",\r\n  //   \"SAP/JDE\",\r\n  // ];\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <div className=\"d-flex\">\r\n        {/* <button\r\n          className=\"btn btn-outline-success btn-lg m-2\"\r\n          onClick={handleSaveClick}\r\n        >\r\n          Save\r\n        </button> */}\r\n        {\r\n          tableData.length > 0?<></>:\r\n          <button\r\n          className={`btn btn-outline-primary btn-lg m-2 ${tableData.length > 0 ? 'disabled' : ''}`}\r\n          disabled={tableData.length > 0 ? true : false}\r\n          onClick={() =>\r\n          {\r\n          //   type !== \"Document\" && latestRevision !== droppedRevision\r\n          //     ? showWarningToast(MSG_BOS_SAVE)\r\n          //     : setShowDropdown((prev) => !prev)\r\n          // }\r\n          onSave();\r\n          }\r\n        }\r\n        >\r\n         + New Document\r\n        </button>\r\n        }\r\n      \r\n      </div>\r\n\r\n      {/* Dropdown appears below */}\r\n      {/* {showDropdown && (\r\n        <div className=\"mt-2\">\r\n          <MassUpdateDropdown\r\n            editableColumns={editableColumns}\r\n            selectedRows={selectedRows}\r\n            onApplyUpdate={handleMassUpdate}\r\n            valueOptions={[\"Yes\", \"No\"]}\r\n            onClose={() => setShowDropdown(false)}\r\n          />\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCreationToolbarCta;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../pages/DocumentCreation/DragAndDrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./DocumentCreationWidget.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./DocumentCreationHelpers\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { saveData } from \"../../services/api/PlantAssignment/saveTableDataService\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\nimport DocumentCreationToolbarCta from \"../DocumentCreation/DocumentCreationWidgetToolbarCta\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DocumentCreationWidget = () => {\r\n  const { initializeDroppableArea, loading } = useDocumentCreationDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [specData, setSpecData] = useState([]);\r\n  const [selectableRows, setSelectableRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  // useEffect(() => {\r\n  //   if (specData.length) {\r\n  //     setTableData(specData.map((item) => ({ ...item, changedCells: {} })));\r\n  //   }\r\n  // }, [specData]);\r\n\r\n  const handleSave = async () => {\r\n    console.log(\"Table Data is:\", tableData);\r\n    setScreenLoader(true);\r\n    console.log(\"Type of Parent:\", type);\r\n    // let parentData = [];\r\n    // let ChildNameKey;\r\n    // let ChildRevKey;\r\n    // let ChildStateKey;\r\n    // let ChildIdKey;\r\n    // if (type === \"Document\") {\r\n    //   parentData = {\r\n    //     SpecName: droppedObjectData.cardData.Name,\r\n    //     SpecRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     SpecState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     SpecID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK CARD DATA\r\n    //     // SpecState need to be added.\r\n    //   };\r\n    //   ChildNameKey = \"ItemName\";\r\n    //   ChildRevKey = \"ItemRevision\";\r\n    //   ChildStateKey = \"ItemState\";\r\n    //   ChildIdKey = \"ItemID\";\r\n    // } else {\r\n    //   console.log(\"It's a physical Product\");\r\n    //   parentData = {\r\n    //     ItemName: droppedObjectData.cardData.Name,\r\n    //     ItemRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     ItemState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     ItemID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK THIS\r\n    //     // need to add Maturity State as Item State and ItemId is Dropped Revision Id.\r\n    //   };\r\n    //   ChildNameKey = \"SpecName\";\r\n    //   ChildRevKey = \"SpecRevision\";\r\n    //   ChildStateKey = \"SpecState\";\r\n    //   ChildIdKey = \"SpecID\";\r\n    // }\r\n\r\n    const formattedData = {\r\n        \"data\": [\r\n          {\r\n            \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n            \"type\" : \"Document\",\r\n            \"dataelements\": {\r\n              \"name\": (cardData?.EIN !=\"N/A\" && cardData?.EIN !=\"\" && cardData?.EIN  != undefined)? cardData?.EIN : cardData?.title!=\"N/A\" ? cardData?.title:\"\",\r\n              \"policy\": \"Document Release\",\r\n              \"state\": \"IN_WORK\",\r\n              \"title\":  (cardData?.EIN !=\"N/A\" && cardData?.EIN !=\"\" && cardData?.EIN  != undefined)? cardData?.EIN : cardData?.title!=\"N/A\" ? cardData?.title:\"\",\r\n              \"description\": cardData?.Description!==\"N/A\" ? cardData?.Description:\"\",\r\n              \"comments\" : \"Test Document\",\r\n              \"collabspace\": \"Micro Motion\",\r\n              \"parentRelName\": \"SpecificationDocument\",\r\n              \"parentDirection\": \"from\",\r\n              \"extensions\": [\r\n                \"IPML.Automatic\"\r\n              ],\r\n            },\r\n            \"relateddata\": {\r\n              \"parents\": [\r\n                {\r\n                  \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n                  \"type\": \"VPMRefrence\",\r\n                  \"updateAction\": \"CONNECT\",\r\n                  \"dataelements\": {\r\n                    \"parentRelName\": \"SpecificationDocument\"\r\n                  },    \r\n              }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n    //   return {\r\n    //     [ChildNameKey]: matchingData ? matchingData.childName : null, // Use found childName\r\n    //     [ChildRevKey]: item.Revision, // Dynamic key based on type\r\n    //     [ChildStateKey]: matchingData ? matchingData.childState : null, // need to check this\r\n    //     [ChildIdKey]: matchingData ? matchingData.ID : null, //\r\n    //     // something needs to be done here\r\n    //     // [ChildStateKey]:\r\n    //     ...parentData, // Merge Parent Data\r\n    //     PrintOnPurchaseOrderRequired: item[\"Print On Purchase Order Required\"],\r\n    //     PrintOnWorkOrderRequired: item[\"Print On Work Order Required\"],\r\n    //     WorkOrderDocumentRequired: item[\"Work Order Document Required\"],\r\n    //     PrintOnReportOrderRequired: item[\"Print On report Order Required\"],\r\n    //     \"SAP/JDE\": item[\"SAP/JDE\"],\r\n    //   };\r\n    // });\r\n\r\n    // formattedData.sort((a, b) => {\r\n    //   if (a.SpecName !== b.SpecName) {\r\n    //     return a.SpecName.localeCompare(b.SpecName);\r\n    //   }\r\n    //   return Number(a.SpecRevision) - Number(b.SpecRevision);\r\n    // });\r\n    const headers = await fetchCsrfToken();\r\n    console.log(\"Formatted Data:\", formattedData, headers);\r\n    const saveURL =\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/documents\";\r\n    let response ;\r\n     await callEnoviaWebService(\"POST\", saveURL, formattedData,headers).then((res) => {\r\n      response = res;\r\n      return response;\r\n    }).catch((error) => {\r\n      console.log(\"Error in catch\", error);\r\n     response = error;\r\n     return response;\r\n    });\r\n    console.log(\"the response from node API is:\", response);\r\n    console.log(\"the response from node API is:===output==\", response.output);\r\n    if (response.status === true && response.output.statusCode=== 200) {\r\n      showSuccessToast(MSG_SAVE_SUCCESS);\r\n      console.log(\"response.output.data\", response.output.data);\r\n      setTableData(response.output.data);\r\n      // setSpecData(tableData);\r\n      setScreenLoader(false);\r\n    } else {\r\n      showErrorToast(response?.errorMessage);\r\n      setScreenLoader(false);\r\n    }\r\n  };\r\n\r\n  // const handleMassUpdate = async (data, column, value) => {\r\n  //   console.log(\"Data when the Mass Update is Clicked:\", data);\r\n  //   console.log(\"Columns to Change:\", column);\r\n  //   console.log(\"Value after change:\", value);\r\n\r\n  //   const updatedData = data.map((row) => ({\r\n  //     ...row,\r\n  //     [column]: value, // Update the specified column with the new value\r\n  //   }));\r\n\r\n  //   console.log(\"Updated Data is:\", updatedData);\r\n  //   console.log(\"Table Data is:\", tableData);\r\n\r\n  //   // Merge updatedData into tableData based on matching Title & Revision\r\n  //   const mergedData = tableData.map((row) => {\r\n  //     const updatedRow = updatedData.find(\r\n  //       (updated) =>\r\n  //         updated.Title === row.Title && updated.Revision === row.Revision\r\n  //     );\r\n\r\n  //     return updatedRow ? updatedRow : row; // Use updated row if found, else keep original row\r\n  //   });\r\n\r\n  //   console.log(\"Merged Data:\", mergedData);\r\n  //   updateTableData(mergedData);\r\n  // };\r\n\r\n  console.log(\"Table Data after Adding:\", tableData);\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  );\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData\", droppedObjectData);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n  const proposedChanges = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.proposedChanges\r\n  );\r\n  console.log(\"Proposed Changes are:\", proposedChanges);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const bosData = useSelector((state) => state.droppedObject.BOSObjectData);\r\n\r\n  console.log(\"Bos data in BOS Widget is:\", bosData);\r\n  const bosSpecDocument = useSelector(\r\n    (state) => state.droppedObject.BOSObjectData.specDocument\r\n  );\r\n  console.log(\"BOSObjectData\", bosSpecDocument);\r\n\r\n  const documentCreationData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.data\r\n  );\r\n\r\n  const dropObjectDetailsData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.dropObjectDetails\r\n  );\r\n\r\n    console.log(\"documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n\r\n  // const updateTableData = (updatedData) => {\r\n  //   const newDataWithChanges = updatedData.map((newItem) => {\r\n  //     const originalItem = specData.find(\r\n  //       (oldItem) =>\r\n  //         oldItem.Title === newItem.Title &&\r\n  //         oldItem.Revision === newItem.Revision\r\n  //     );\r\n\r\n  //     if (!originalItem) return { ...newItem, changedCells: {} };\r\n\r\n  //     // Track changed cells\r\n  //     const changedCells = {};\r\n  //     Object.keys(newItem).forEach((key) => {\r\n  //       if (newItem[key] !== originalItem[key]) {\r\n  //         changedCells[key] = true; // Mark this cell as changed\r\n  //       }\r\n  //     });\r\n\r\n  //     return { ...newItem, changedCells };\r\n  //   });\r\n\r\n  //   setTableData(newDataWithChanges);\r\n  // };\r\n\r\n  console.log(\"Table Data is:\", tableData);\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  const newTableData = useMemo(\r\n    () => getTableData(documentCreationData, type),\r\n    [documentCreationData, type]\r\n  );\r\n  useEffect(() => {\r\n    setSpecData(newTableData);\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n  const columns = useMemo(\r\n    () =>\r\n      tableColumns(\r\n        type,\r\n        droppedObjectData?.cardData[\"Latest Revision\"],\r\n        droppedObjectData?.cardData[\"Dropped Revision\"]\r\n      ),\r\n    [type, droppedObjectData?.cardData]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n      })\r\n    );\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n  };\r\n const optimizedTableData = useMemo(() => \r\n  getTableData(tableData, cardData), [tableData]\r\n);\r\n\r\nuseEffect(() => {\r\n  console.log(\"useEffect documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n\r\n  //filter based on the conditions\r\n  const filteredData = documentCreationData.filter((item) => {\r\n    const itemTitle = item?.dataelements?.title?.trim();\r\n    const objEIN =dropObjectDetailsData?.EIN?.trim();\r\n    const objTitle = dropObjectDetailsData?.Title?.trim();\r\n\r\n    if(objEIN){\r\n      return itemTitle === objEIN;\r\n    } else {\r\n      return itemTitle === objTitle;\r\n    }\r\n  });\r\n  console.log(\"FilteredData FilteredData\", filteredData);\r\n\r\n  setTableData(filteredData);\r\n},[documentCreationData])\r\n\r\nconsole.log(\"cardData\", cardData);\r\nconsole.log(\"cardData11111=>type\", type);\r\nconsole.log(\"cardData11111=>tableData\", tableData);\r\nconsole.log(\"cardData11111=>optimizedTableData\", optimizedTableData);\r\n\r\n  return (\r\n    <>\r\n   \r\n      {screenLoader && (\r\n        <div className=\"loading-overlay\">\r\n          <Loader />\r\n          <p>Saving...</p>\r\n        </div>\r\n      )}\r\n      {!isDropped && !loading && !isTableLoading && <DragAndDropComponent />}\r\n      {loading && <Loader />}\r\n      {isDropped && (\r\n        <>\r\n        {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {cardData && (\r\n                <CardWithDragAndDrop data={cardData} widgetType=\"documentCreationWidget\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"wrapper-cta\">\r\n                <DocumentCreationToolbarCta\r\n                  onSave={handleSave}\r\n                  type={type}\r\n                  latestRevision={\r\n                    droppedObjectData?.cardData[\"Latest Revision\"]\r\n                  }\r\n                  droppedRevision={\r\n                    droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                  }\r\n                  selectedRows={selectedTableRows}\r\n                  state={state}\r\n                  tableData={optimizedTableData}\r\n                  documentCreationData={documentCreationData}\r\n                  cardData={cardData}\r\n                  // onMassUpdate={handleMassUpdate}\r\n                />\r\n                <ReusableTable\r\n                showActionButtons={false}\r\n                  key={tableKey}\r\n                  data={optimizedTableData}\r\n                  columns={columns}\r\n                  // meta={{ updateTableData }}\r\n                  type={type}\r\n                  // latestRevision={\r\n                  //   droppedObjectData?.cardData[\"Latest Revision\"]\r\n                  // }\r\n                  // droppedRevision={\r\n                  //   droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                  // }\r\n                  widgetType=\"Doc_Creation_Widget\"\r\n                  onSelectableRowsChange={setSelectableRows}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DocumentCreationWidget;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\n// import WidgetLifecycle from \"./WidgetLifecycle\";\r\n// import BOSWidget from \"./BOSWidget\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport DocumentCreationWidget from \"./DocumentCreationWidget\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <WidgetLifecycle />\r\n      <DocumentCreationWidget \r\n      />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\r\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { fetchData, loadWAFData } from \"../../../utils/helpers\";\r\n \r\n// Function to extract IDs from titles\r\nconst extractIdsFromTitles = (data, allPlants) => {\r\n  console.log(\"Data Received for ID Extraction:\", data);\r\n  console.log(\"[PlantAssignment] All Plants Data:\", allPlants);\r\n \r\n  const newClasses = data\r\n    .map((item) => {\r\n      const itemTitle = item.title.replace(/\\s+/g, \"\").replace(/plant/i, \"\");\r\n \r\n      const matchedPlant = allPlants.find((plant) => {\r\n        const plantTitle = plant.title\r\n          .replace(/\\s+/g, \"\")\r\n          .replace(/plant/i, \"\");\r\n        return plantTitle.toLowerCase() === itemTitle.toLowerCase();\r\n      });\r\n \r\n      return matchedPlant ? matchedPlant.id : null;\r\n    })\r\n    .filter((id) => id !== null);\r\n  // Remove null values (non-matching titles)\r\n \r\n  console.log(\"Extracted IDs (newClasses):\", newClasses);\r\n  return newClasses;\r\n};\r\n \r\nexport const handleRemoveData = async (\r\n  allPlants,\r\n  removedTitles,\r\n  productId,\r\n  type\r\n) => {\r\n  console.log(\"allPlants\", allPlants);\r\n  console.log(\"removedTitles\", removedTitles);\r\n  const rowstoDelete = extractIdsFromTitles(removedTitles, allPlants);\r\n  // console.log(\"newClasses handleRemoveData\",newClasses);\r\n \r\n  if (rowstoDelete.length > 0) {\r\n    let declassifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n    let classifybody = {\r\n      id: productId,\r\n      type: type,\r\n      classes: rowstoDelete,\r\n    };\r\n    const declassifyResponse = await fetchData(\r\n       \"POST\",\r\n      declassifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n  }\r\n};\r\n \r\n// Updated handleAddData function\r\nexport const handleAddData = async (\r\n  data,\r\n  allPlants,\r\n  objectId,\r\n  type,\r\n  proposedChanges,\r\n  productChilds,\r\n  hasMBOM\r\n) => {\r\n  console.log(\"Data Received for handleAddData:\", data);\r\n \r\n  // Step 1: Convert incoming data (titles) to class IDs\r\n  const newClasses = extractIdsFromTitles(data, allPlants);\r\n  console.log(\"newClasses before filtering:\", newClasses);\r\n  console.log(\"productChilds\", productChilds);\r\n \r\n  // Step 2: Filter productChilds that are released but not being modified\r\n  const NotPropagableChilds = productChilds.filter((prodChild) => {\r\n    if (prodChild.state.toLowerCase() === \"released\") {\r\n      const change = proposedChanges.find(\r\n        (change) =>\r\n          change.identifier === prodChild.id &&\r\n          change.action.toLowerCase() === \"modify\"\r\n      );\r\n      return !change;\r\n    }\r\n    return false;\r\n  });\r\n \r\n  console.log(\"NotPropagableChilds ARE:\", NotPropagableChilds);\r\n \r\n  // Step 3: Prepare Error Object\r\n  const ErrorObject = [];\r\n \r\n  newClasses.forEach((classId) => {\r\n    const missingIn = NotPropagableChilds.filter(\r\n      (child) => !child.classes.includes(classId)\r\n    )\r\n      .map((child) => child.name)\r\n      .join(\", \");\r\n \r\n    if (missingIn !== \"\" && missingIn !== \"Undefined\") {\r\n      ErrorObject.push({ ClassID: classId, Childs: missingIn });\r\n    }\r\n  });\r\n  console.log(\"error object savetable\", ErrorObject);\r\n \r\n  // Step 4: Generate Final Messages\r\n  let Finalmessage = \"\";\r\n  ErrorObject.forEach((item) => {\r\n    const classTitle = allPlants.find(\r\n      (plant) => plant.id === item.ClassID\r\n    )?.title;\r\n    const message = `Unable to classify product in ${classTitle} due to unclassified child items: ${item.Childs}`;\r\n    Finalmessage += `${message}\\n`;\r\n  });\r\n \r\n  console.log(\"Final Message:\\n\", Finalmessage);\r\n \r\n  // Step 5: Filter out newClasses that are present in ErrorObject\r\n  const filteredNewClasses = newClasses.filter(\r\n    (id) => !ErrorObject.some((item) => item.ClassID === id)\r\n  );\r\n  console.log(\r\n    \"Filtered New Classes (excluding errored ones):\",\r\n    filteredNewClasses\r\n  );\r\n \r\n  // Make the API call if newClasses is not empty\r\n  if (filteredNewClasses.length > 0) {\r\n    const classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n    const classifybody = {\r\n      id: objectId, // Use objectId from Redux\r\n      type: type, // Use type from Redux\r\n      classes: filteredNewClasses,\r\n      mode: \"classifyParent\",\r\n    };\r\n \r\n    console.log(\"Classify API Body:\", classifybody);\r\n \r\n    try {\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"Classify Response:\", JSON.stringify(classifyResponse));\r\n    } catch (error) {\r\n      console.error(\"Error in Classify API Call:\", error);\r\n    }\r\n  }\r\n\r\n  if (\r\n    filteredNewClasses.length > 0 &&\r\n    productChilds.length > 0 &&\r\n    type === \"VPMReference\" &&\r\n    hasMBOM\r\n  ) {\r\n    let classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n\r\n    let classifybody = {\r\n      id: objectId,\r\n      type: type,\r\n      classes: filteredNewClasses,\r\n      childs: productChilds,\r\n      mode: \"classifychilds\",\r\n    };\r\n    const childclassifyResponse = await fetchData(\r\n       \"POST\",\r\n      classifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\r\n      \"child classifyResponse:\",\r\n      JSON.stringify(childclassifyResponse)\r\n    );\r\n  }\r\n \r\n  return {\r\n    success: true,\r\n    message: \"Data saved successfully\",\r\n    ErrorObject: ErrorObject,\r\n    Finalmessage: Finalmessage,\r\n  };\r\n};\r\n \r\nexport const saveData = async (\r\n  updatedItems,\r\n  classesToBeClassified,\r\n  initialAssignedClasses,\r\n  headers,\r\n  productId,\r\n  AllClasses,\r\n  productChilds,\r\n  type,\r\n  rowstoDelete,\r\n  finalArray,\r\n  proposedChanges\r\n) => {\r\n  try {\r\n    const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n    console.log(\"[Save Data] Starting data saving process...\");\r\n    console.log(\"Type in Save Table Data:\", type);\r\n    console.log(\"Final aRRAY IS inside Save:\", finalArray);\r\n    console.log(\"Proposed Changes in Save\", proposedChanges);\r\n    const classifiedClasses = [...classesToBeClassified];\r\n    const WAFData = await loadWAFData();\r\n    const fetchOOTBData = async (url, body, method) => {\r\n      console.log(\"Fetching URL:\", url);\r\n      console.log(\"Request Body:\", JSON.stringify(body, null, 2));\r\n \r\n      return new Promise((resolve, reject) => {\r\n        WAFData.authenticatedRequest(url, {\r\n          method,\r\n          headers: {\r\n            ...headers,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: JSON.stringify(body),\r\n          type: \"json\",\r\n          onComplete: (response) => {\r\n            console.log(\"Response received:\", response);\r\n            resolve(response);\r\n          },\r\n          onFailure: (error) => {\r\n            console.error(\"Request failed:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    };\r\n \r\n \r\n \r\n    // released childs but not present in CA Proposed Changes\r\n    let NotPropagableChilds = productChilds.filter((prodChild) => {\r\n      console.log(\"Processing prodChild:\", prodChild);\r\n      if (prodChild.state.toLowerCase() === \"released\") {\r\n        console.log(\"Released prodChild:\", prodChild);\r\n        const change = proposedChanges.find(\r\n          (change) =>\r\n            change.identifier === prodChild.id &&\r\n            change.action.toLowerCase() === \"modify\"\r\n        );\r\n        console.log(\"Matching change for prodChild:\", change);\r\n        return !change;\r\n      }\r\n      console.log(\"prodChild state is not 'released':\", prodChild.state);\r\n      return false;\r\n    });\r\n    console.log(\"NotPropagableChilds ARE :\", NotPropagableChilds);\r\n \r\n    let ErrorObj = [];\r\n    finalArray.forEach((classItem) => {\r\n      //if (classItem.Type === \"New\" || classItem.Type === \"Update\" ) {\r\n      if (classItem.MBOMValue) {\r\n        let prodchilds = [];\r\n        NotPropagableChilds.forEach((notPropagableChild) => {\r\n          if (!notPropagableChild.classes.includes(classItem.id)) {\r\n            prodchilds.push({\r\n              childId: notPropagableChild.id,\r\n              childName: notPropagableChild.name,\r\n            });\r\n          }\r\n        });\r\n        if (prodchilds.length > 0) {\r\n          ErrorObj.push({\r\n            id: classItem.id,\r\n            title: classItem.title,\r\n            childs: prodchilds,\r\n            type: classItem.Type,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    let Finalmessage = \"\";\r\n    console.log(\"ErrorObj IS\", ErrorObj);\r\n    ErrorObj.forEach((item) => {\r\n      let message = \"\";\r\n \r\n      // Check if item.childs is an array and contains valid objects with titles\r\n      if (\r\n        Array.isArray(item.childs) &&\r\n        item.childs.every((child) => child.childName)\r\n      ) {\r\n        const childTitles = item.childs\r\n          .map((child) => child.childName)\r\n          .join(\", \");\r\n        console.log(\"Chilld Titles are\", childTitles);\r\n        if (item.type.toLowerCase() !== \"new\") {\r\n          message = `${item.title} MBOM can't be Make due to unclassified child items: ${childTitles}`;\r\n        } else {\r\n          message = `Unable to classify product ${item.title} due to unclassified child items: ${childTitles}`;\r\n        }\r\n        console.log(\"Message is:\", message);\r\n      } else {\r\n        // Handle case where childs is invalid or missing titles\r\n        message = `Invalid child data for ${item.title}.`;\r\n      }\r\n \r\n      //  item.message = message;\r\n      Finalmessage += `${message}\\n`; // Using '\\n' to separate each message with a new line\r\n    });\r\n    console.log(ErrorObj);\r\n    console.log(\"Concatenated Messages:\\n\", Finalmessage);\r\n \r\n    let newClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.Type.toLowerCase() === \"new\" &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n    console.log(\"New Classes are:\", newClasses);\r\n    let updateBody = {};\r\n    finalArray.forEach((classItem) => {\r\n      const isIdNotInErrorObj = !ErrorObj.some(\r\n        (errorItem) => errorItem.id === classItem.id\r\n      );\r\n      if (\r\n        isIdNotInErrorObj &&\r\n        (classItem.Type.toLowerCase() === \"update\" ||\r\n          (classItem.Type.toLowerCase() === \"new\" && classItem.MBOMValue))\r\n      ) {\r\n        updateBody[classItem.MBOMName] = classItem.MBOMValue;\r\n      }\r\n    });\r\n    console.log(\"Update body is:\", updateBody);\r\n \r\n    let propagateClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.MBOMValue &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n \r\n    console.log(\"Propogateable classes are\", propagateClasses);\r\n \r\n    if (newClasses.length > 0) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: newClasses,\r\n        mode: \"classifyParent\",\r\n      };\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"classifyResponse:\", JSON.stringify(classifyResponse));\r\n    }\r\n \r\n    if (Object.keys(updateBody).length > 0) {\r\n      const nextApiUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslib/dslib:ClassifiedItem/${productId}`;\r\n      const response = await fetchOOTBData(nextApiUrl, \"\", \"GET\");\r\n      console.log(\"CStamp Response:\", response);\r\n      let cestamp = response.member[0]?.cestamp || \"\";\r\n      updateBody[\"cestamp\"] = cestamp;\r\n \r\n      const patchUrl = `https://saasimplementationserverdev.azurewebsites.net/plantAssignment/updateClassificationAttribute?id=${productId}`;\r\n      await fetchData(\"PATCH\",patchUrl, updateBody, );\r\n      console.log(\"Updated database successfully.\");\r\n    }\r\n \r\n    if (\r\n      propagateClasses.length > 0 &&\r\n      productChilds.length > 0 &&\r\n      type === \"VPMReference\"\r\n    ) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: propagateClasses,\r\n        childs: productChilds,\r\n        mode: \"classifychilds\",\r\n      };\r\n      const childclassifyResponse = await fetchData(\r\n         \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\r\n        \"child classifyResponse:\",\r\n        JSON.stringify(childclassifyResponse)\r\n      );\r\n    }\r\n    if (rowstoDelete.length > 0) {\r\n      let declassifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: rowstoDelete,\r\n      };\r\n      const declassifyResponse = await fetchData(\r\n        \"POST\",\r\n        declassifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n    }\r\n \r\n    console.log(\"All classification API calls completed successfully.\");\r\n \r\n    return {\r\n      success: true,\r\n      message: \"Data saved successfully\",\r\n      ErrorObj: ErrorObj,\r\n      Finalmessage: Finalmessage,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error occurred:\", error);\r\n    return { success: false, message: \"Failed to save data\", error };\r\n  }\r\n};"],"names":["forwardRef","_ref","ref","data","columns","addedItem","CAName","state","showWarningToast","useToast","rowSelection","setRowSelection","useState","useEffect","addPlant","selectedItems","table","getSelectedRowModel","rows","map","item","original","length","MSG_EMPTYADD_ERROR","useImperativeHandle","enhancedColumns","useMemo","id","cell","_ref2","row","_jsx","type","className","checked","getIsSelected","onChange","getToggleSelectedHandler","useReactTable","enableRowSelection","onRowSelectionChange","getCoreRowModel","_jsxs","_Fragment","children","onClick","getRowModel","forEach","toggleSelected","style","maxHeight","backgroundColor","flexRender","getVisibleCells","column","columnDef","getContext","accessorKey","WidgetLifecycle","handleDrop","useBOSDropableArea","showSuccessToast","showErrorToast","loading","setLoading","console","log","window","widget","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","items","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","Loader","useDocumentCreationWidget","dispatch","useDispatch","ENOVIA_BASE_URL","process","email","getValue","handleDocumentCreationWidget","collabSpace","objectId","parentName","parentRevision","setParentDetailsLoading","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","baseURL","concat","parentDirection","urlObjWAF","ChildObject","callEnoviaWebService","status","output","_response$data","_response$data$data","_response$data2","_response$data2$data","requestBody","getUrl","ChildObjectDocument","sSpec","title","dataelements","trim","secondaryTitle","revision","stateNLS","name","revisionBody","child","body","identifier","source","relativePath","push","RevisionUrl","response","convertRevisionToNumber","rev","test","parseInt","number","i","charCodeAt","results","latestVersion","versions","reduce","latest","current","doc","version","_objectSpread","isLatestRevision","SpecName","SpecRevision","Items","obj","ItemName","ItemRevision","Specifications","fetchData","mergedData","spec","matchingDoc","find","childState","childTitle","childLatest","childName","childRevision","PrintOnPurchaseOrderRequired","PrintOnWorkOrderRequired","WorkOrderDocumentRequired","PrintOnReportOrderRequired","setDocumentCreationData","setSpecDocument","useDocumentCreationDropableArea","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","setDroppedObjectData","cardData","draggedObjectData","_dataItems$","_dataItems$2","setIsDroppedAction","setDragObjectDetailsDocumentCreation","objectType","Name","MSG_FETCH_OBJECT_DETAILS_FAILED","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","DragAndDropComponent","performSearch","useInterComSearch","Image","width","height","src","alt","SearchInput","onSearch","searchText","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","formatDateToCustom","input","date","Date","localDate","toLocaleString","timeZone","pad","n","toString","padStart","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","getTableData","tableData","_data$dataelements","_data$dataelements2","_data$dataelements3","_data$dataelements4","_data$dataelements5","_data$dataelements6","_data$dataelements7","_data$dataelements8","_data$dataelements9","_data$dataelements10","Title","Revision","IsLatestRevision","Modified","modified","State","TypeNLS","typeNLS","Originated","originated","onSave","selectedRows","latestRevision","droppedRevision","documentCreationData","showDropdown","setShowDropdown","disabled","DocumentCreationWidget","tableKey","setTableKey","setTableData","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","specData","setSpecData","selectableRows","setSelectableRows","selectedTableRows","useSelector","loadingParentDetails","proposedChanges","plantObjectData","isDropped","bosData","BOSObjectData","bosSpecDocument","specDocument","_state$droppedObject$","dropObjectDetailsData","_state$droppedObject$2","dropObjectDetails","prevKey","_droppedObjectData$in","_droppedObjectData$in2","newTableData","Type","owner","Owner","Description","imageURL","EIN","getCardData","header","optimizedTableData","filteredData","filter","_item$dataelements","_item$dataelements$ti","_dropObjectDetailsDat","_dropObjectDetailsDat2","itemTitle","objEIN","objTitle","handleHomeClick","setIsDropped","parentDetails","setPlantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CardWithDragAndDrop","widgetType","DocumentCreationToolbarCta","formattedData","undefined","_response","then","res","catch","statusCode","MSG_SAVE_SUCCESS","errorMessage","ReusableTable","showActionButtons","onSelectableRowsChange","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","render","Provider","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener","extractIdsFromTitles","newClasses","replace","matchedPlant","plant","toLowerCase","handleRemoveData","removedTitles","productId","rowstoDelete","declassifyUrl","classifybody","classes","declassifyResponse","JSON","stringify","handleAddData","productChilds","hasMBOM","NotPropagableChilds","prodChild","change","action","ErrorObject","classId","missingIn","join","ClassID","Childs","Finalmessage","_allPlants$find","classTitle","message","filteredNewClasses","classifyUrl","classifyResponse","childs","childclassifyResponse","saveData","updatedItems","classesToBeClassified","initialAssignedClasses","AllClasses","finalArray","WAFData","loadWAFData","fetchOOTBData","url","method","Promise","resolve","reject","authenticatedRequest","onComplete","onFailure","ErrorObj","classItem","MBOMValue","prodchilds","notPropagableChild","childId","Array","isArray","every","childTitles","errorItem","updateBody","MBOMName","propagateClasses","Object","keys","_response$member$","nextApiUrl","cestamp","member","patchUrl"],"sourceRoot":""}